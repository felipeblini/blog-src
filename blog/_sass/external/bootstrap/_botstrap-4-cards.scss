// Cards variables
$card-spacer-x:            1.25rem !default;
$card-spacer-y:            .75rem !default;
$card-border-width:        1px !default;
$card-border-radius:       3 !default;
$card-border-color:        rgba(0,0,0,.125) !default;
$card-border-radius-inner: $card-border-radius !default;
$card-cap-bg:              #f5f5f5 !default;
$card-bg:                  #fff !default;

$card-link-hover-color:    #fff !default;

$card-deck-margin:         .625rem !default;

$card-columns-sm-up-column-gap: 1.25rem !default;

$enable-flex: "";

$enable-rounded: true;

$enable-hover-media-query: "";

// Hover mixins
@mixin hover {
  @if $enable-hover-media-query {
    // See Media Queries Level 4: http://drafts.csswg.org/mediaqueries/#hover
    // Currently shimmed by https://github.com/twbs/mq4-hover-shim
    @media (hover: hover) {
      &:hover { @content }
    }
  }
  @else {
    &:hover { @content }
  }
}

@mixin hover-focus {
  @if $enable-hover-media-query {
    &:focus { @content }
    @include hover { @content }
  }
  @else {
    &:focus,
    &:hover {
      @content
    }
  }
}

@mixin plain-hover-focus {
  @if $enable-hover-media-query {
    &,
    &:focus {
      @content
    }
    @include hover { @content }
  }
  @else {
    &,
    &:focus,
    &:hover {
      @content
    }
  }
}

@mixin hover-focus-active {
  @if $enable-hover-media-query {
    &:focus,
    &:active {
      @content
    }
    @include hover { @content }
  }
  @else {
    &:focus,
    &:active,
    &:hover {
      @content
    }
  }
}

// Border radius mixin
@mixin border-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-radius: $radius;
  }
}

// Cards mixins
@mixin card-variant($background, $border) {
  background-color: $background;
  border-color: $border;
}

@mixin card-outline-variant($color) {
  background-color: transparent;
  border-color: $color;
}

//
// Inverse text within a card for use with dark backgrounds
//

@mixin card-inverse {
  .card-header,
  .card-footer {
    border-bottom: $card-border-width solid rgba(255,255,255,.2);
  }
  .card-header,
  .card-footer,
  .card-title,
  .card-blockquote {
    color: #fff;
  }
  .card-link,
  .card-text,
  .card-blockquote > footer {
    color: rgba(255,255,255,.65);
  }
  .card-link {
    @include hover-focus {
      color: $card-link-hover-color;
    }
  }
}

//
// Base styles
//

.card {
  position: relative;
  display: block;
  margin-bottom: $card-spacer-y;
  background-color: $card-bg;
  // border: $card-border-width solid $card-border-color;
  @include border-radius($card-border-radius);
  // Doesn't use mixin so that cards always have a "border"
  box-shadow: inset 0 0 0 $card-border-width $card-border-color;
}

.card-block {
  @include clearfix;
  padding: $card-spacer-x;
}

.card-title {
  margin-bottom: $card-spacer-y;
}

.card-subtitle {
  margin-top: -($card-spacer-y / 2);
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}

// .card-actions {
//   padding: $card-spacer-y $card-spacer-x;

//   .card-link + .card-link {
//     margin-left: $card-spacer-x;
//   }
// }

.card-link {
  @include hover {
    text-decoration: none;
  }

  + .card-link {
    margin-left: $card-spacer-x;
  }
}

@if $enable-rounded {
  .card {
    > .list-group:first-child {
      .list-group-item:first-child {
        border-top-left-radius: $card-border-radius;
        border-top-right-radius: $card-border-radius;
      }
    }

    > .list-group:last-child {
      .list-group-item:last-child {
        border-bottom-right-radius: $card-border-radius;
        border-bottom-left-radius: $card-border-radius;
      }
    }
  }
}


//
// Optional textual caps
//

.card-header {
  @include clearfix;
  padding: $card-spacer-y $card-spacer-x;
  background-color: $card-cap-bg;
  // border-bottom: $card-border-width solid $card-border-color;
  // Doesn't use mixin so that cards always have a "border"
  box-shadow: inset 0 0 0 $card-border-width $card-border-color;

  &:first-child {
    @include border-radius($card-border-radius-inner $card-border-radius-inner 0 0);
  }
}

.card-footer {
  @include clearfix;
  padding: $card-spacer-y $card-spacer-x;
  background-color: $card-cap-bg;
  // border-top: $card-border-width solid $card-border-color;
  // Doesn't use mixin so that cards always have a "border"
  box-shadow: inset 0 0 0 $card-border-width $card-border-color;

  &:last-child {
    @include border-radius(0 0 $card-border-radius-inner $card-border-radius-inner);
  }
}


//
// Header navs
//

.card-header-tabs {
  margin-right: -($card-spacer-x / 2);
  margin-bottom: -$card-spacer-y;
  margin-left: -($card-spacer-x / 2);
  border-bottom: 0;

  .nav-item {
    margin-bottom: 0;
  }
}

.card-header-pills {
  margin-right: -($card-spacer-x / 2);
  margin-left: -($card-spacer-x / 2);
}


//
// Background variations
//

.card-primary {
  @include card-variant($brand-primary, $brand-primary);
}
.card-success {
  @include card-variant($brand-success, $brand-success);
}
.card-info {
  @include card-variant($brand-info, $brand-info);
}
.card-warning {
  @include card-variant($brand-warning, $brand-warning);
}
.card-danger {
  @include card-variant($brand-danger, $brand-danger);
}

// Remove all backgrounds
.card-outline-primary {
  @include card-outline-variant($btn-primary-bg);
}
.card-outline-info {
  @include card-outline-variant($btn-info-bg);
}
.card-outline-success {
  @include card-outline-variant($btn-success-bg);
}
.card-outline-warning {
  @include card-outline-variant($btn-warning-bg);
}
.card-outline-danger {
  @include card-outline-variant($btn-danger-bg);
}

//
// Inverse text within a card for use with dark backgrounds
//

.card-inverse {
  @include card-inverse;
}

//
// Blockquote
//

.card-blockquote {
  padding: 0;
  margin-bottom: 0;
  border-left: 0;
}

// Card image
.card-img {
  // margin: -1.325rem;
  @include border-radius(.25rem);
}
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 1.25rem;
}



// Card image caps
.card-img-top {
  @include border-radius($card-border-radius-inner $card-border-radius-inner 0 0);
}
.card-img-bottom {
  @include border-radius(0 0 $card-border-radius-inner $card-border-radius-inner);
}


//
// Card set
//

@if $enable-flex {
    .card-deck {
      display: flex;
      flex-flow: row wrap;
      margin-right: -$card-deck-margin;
      margin-left: -$card-deck-margin;

      .card {
        flex: 1 0 0;
        margin-right: $card-deck-margin;
        margin-left: $card-deck-margin;
      }
    }
  
} @else {
    $space-between-cards: (2 * $card-deck-margin);
    .card-deck {
      display: table;
      table-layout: fixed;
      border-spacing: $space-between-cards 0;

      .card {
        display: table-cell;
        width: 1%;
        vertical-align: top;
      }
    }
    .card-deck-wrapper {
      margin-right: (-$space-between-cards);
      margin-left: (-$space-between-cards);
    }
  
}

//
// Card groups
//


  .card-group {
    @if $enable-flex {
      display: flex;
      flex-flow: row wrap;
    } @else {
      display: table;
      width: 100%;
      table-layout: fixed;
    }

    .card {
      @if $enable-flex {
        flex: 1 0 0;
      } @else {
        display: table-cell;
        vertical-align: top;
      }

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if $enable-rounded {
        &:first-child {
          @include border-right-radius(0);

          .card-img-top {
            border-top-right-radius: 0;
          }
          .card-img-bottom {
            border-bottom-right-radius: 0;
          }
        }
        &:last-child {
          @include border-left-radius(0);

          .card-img-top {
            border-top-left-radius: 0;
          }
          .card-img-bottom {
            border-bottom-left-radius: 0;
          }
        }

        &:not(:first-child):not(:last-child) {
          border-radius: 0;

          .card-img-top,
          .card-img-bottom {
            border-radius: 0;
          }
        }
      }
    
  }
}


//
// Card
//


  .card-columns {
    column-count: 3;
    column-gap: $card-columns-sm-up-column-gap;

    .card {
      display: inline-block;
      width: 100%; // Don't let them exceed the column width
    }
    
}